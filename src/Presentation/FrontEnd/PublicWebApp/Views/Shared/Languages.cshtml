@using System.Globalization
@using VirtoCommerce.ApiClient.DataContracts
@using VirtoCommerce.ApiWebClient.Extensions.Routing
@using VirtoCommerce.ApiWebClient.Globalization
@using VirtoCommerce.ApiWebClient.Helpers
@{
    var tempValues = new RouteValueDictionary(ViewContext.RouteData.Values);
    foreach (var key in Request.QueryString.Keys.Cast<string>())
    {
        if (!tempValues.ContainsKey(key))
        {
            tempValues.Add(key, Request.QueryString[key]);
        }
    }

    var store = StoreHelper.StoreClient.GetCurrentStore();
    if (store != null && store.Languages != null && store.Languages.Length > 1)
    {
        var currentCulture = CultureInfo.CreateSpecificCulture(UICulture);
        <li>
            <div class="language">
                <span>
                    @("Language".Localize()):

                    <span class="current">@currentCulture.NativeName.Substring(0, currentCulture.NativeName.IndexOf('(')).Trim()</span>
                </span>
                <ul>
                    @foreach (var lang in store.Languages)
                    {
                        var culture = CultureInfo.CreateSpecificCulture(lang);
                        tempValues[Constants.Language] = culture.Name;
                        tempValues[Constants.Store] = SettingsHelper.SeoEncode(StoreHelper.CustomerSession.StoreId, SeoUrlKeywordTypes.Store, culture.Name);

                        if (tempValues.ContainsKey(Constants.Category) && tempValues[Constants.Category] as string != null)
                        {
                            tempValues[Constants.Category] = SettingsHelper.SeoEncode(
                                SettingsHelper.SeoDecode(ViewContext.RouteData.Values[Constants.Category].ToString()
                                    , SeoUrlKeywordTypes.Category), SeoUrlKeywordTypes.Category, culture.Name);
                        }

                        if (tempValues.ContainsKey(Constants.Item) && tempValues[Constants.Item] as string != null)
                        {
                            tempValues[Constants.Item] = SettingsHelper.SeoEncode(
                                SettingsHelper.SeoDecode(ViewContext.RouteData.Values[Constants.Item].ToString()
                                    , SeoUrlKeywordTypes.Item), SeoUrlKeywordTypes.Item, culture.Name);
                        }

                        var countryCode = culture.Name.Substring(culture.Name.IndexOf('-') + 1).ToLowerInvariant();
                        var liClass = string.Equals(culture.Name, UICulture, StringComparison.InvariantCultureIgnoreCase) ? " selected" : "";

                        <li class="@liClass">
                            <img src="~/Content/themes/default/images/blank.gif" class="flag flag-@countryCode" alt="@culture.NativeName">
                            @Html.ActionLink(culture.NativeName.Substring(0, culture.NativeName.IndexOf('(')).Trim(), null, tempValues, new Dictionary<string, object>
                    {
                        {"title", culture.NativeName}
                    })
                        </li>
                    }
                </ul>
            </div>
        </li>
    }
}