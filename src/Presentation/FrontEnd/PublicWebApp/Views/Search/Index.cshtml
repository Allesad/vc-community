@using System.Globalization
@model SearchResult
           
@{
    ViewBag.Title = Html.Title(Model.Title.Localize());
}

@helper RenderItems(string templateName)
{
    foreach (var item in Model.Results)
    {
        @Html.DisplayFor(model => item, templateName, new { hidePrices = true })
    }
}


<script type="text/javascript" src="@Url.Content("~/Scripts/v/virto-reviews.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-tmpl-min.js")"></script>


@if (Model.Pager.TotalCount == 0)
{
    Html.SharedViewBag().Messages = new MessagesModel { new MessageModel("There are no results available.".Localize(), MessageType.Notice) };
}
else
{
    <script type="text/javascript">
    $(function () {

        @*VirtoCommerce.updatePrices(@Html.Raw(string.Format("{{{0}}}",Model.Results.Aggregate("", (current, item) => current + string.Format("'{0}':'{1}',", item.CatalogItem.Id, item.CatalogItem.Outline)))));*@
        //Load promo
        VirtoCommerce.registerDynamicContent("CategoryTop", function (data) {
            $('.main-slider .container').html(data);
            VirtoCommerce.initSliders();
        });

        @foreach (var data in Model.Results)
        {
          @:$("li#" + "@data.CatalogItem.Id" + " #rateit").rateit({ resetable: false, readonly: true, value: @data.CatalogItem.Rating.ToString(CultureInfo.InvariantCulture), starwidth: 11, starheight: 11 });
        }


        
        @*@if (Model.Results.Any())
        {
            if (Model.Results.Count == 1)
            {
            @:var filter = "@Html.Raw(string.Format("ItemId eq '{0}'", Model.CatalogItems[0].CatalogItem.ItemId))";
            }
            else
            {
            @:var filter = "@Html.Raw(Model.CatalogItems.Select(i => i.CatalogItem.ItemId).Aggregate((x, y) => (x.Contains("or ItemId eq") ? x : string.Format("ItemId eq '{0}'", x)) + string.Format(" or ItemId eq '{0}'", y)))";
            }
            @:Reviews.catalogReviews(filter);
        }*@

        var viewClass = VirtoCommerce.getCookie("vcf.categoryListView");
        viewClass = viewClass == "" ? "grid" : viewClass;
        window.setTimeout(function () { $('div.view-mode a.' + viewClass).trigger('click'); }, 100);

    });
    </script>

    <div class="content">
        <div class="category-products">
            <div class="category-image">
                <div class="main-slider">
                    <div class="container">
                        @*                @{ Html.RenderAction("ShowDynamicContent", "Banner", new { placeName = "CategoryTop" }, true); }*@
                    </div>
                </div>
            </div>
            <div class="toolbar top">
                @Html.DisplayFor(model => model.Pager, "SearchPager")
            </div>
            <div class="grid">
                <ul class="products-list grid">
                    @RenderItems("Item")
                </ul>
            </div>
            <div class="list">
                <ul class="products-list list">
                    @RenderItems("SearchListItem")
                </ul>
            </div>
            <div class="toolbar">
                @Html.DisplayFor(model => model.Pager, "SearchPager")
            </div>
        </div>
    </div>
}
<div class="sidebar">
    @*@Html.DisplayFor(m => m, "FilterPanel")*@
</div>
