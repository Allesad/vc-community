@model CatalogItemWithPriceModel

<a href="@Url.ItemUrl(Model.CatalogItem.Item, Model.CatalogItem.ParentItemId)" title="@Model.DisplayName" class="product-image">
    <figure>
        <img src="@Url.Image(Model.CatalogItem.Item, "primaryimage")" alt="@Model.DisplayName" onerror="this.onerror=null;this.src='@Href("~/Content/themes/default/images/blank.png")';" />
    </figure>
</a>
<div class="product-info">
    <a class="product-name" href="@Url.ItemUrl(Model.CatalogItem.Item, Model.CatalogItem.ParentItemId)">@Model.DisplayName</a>
    <div class="price-container">
        @if (Model.Price != null)
        {
            @Html.DisplayFor(model => model.Price)
        }
        <div class="ratings">
            <div class="rating">
                <div style="width: 100%;" class="mask"></div>
            </div>
        </div>
        <div class="ratings-links">
            <ul>
                <li><a href="">1 Review(s)</a></li>
                <li><a href="">Add Your Review</a></li>
            </ul>
        </div>
    </div>
    <div class="description">
        @if (Model.CatalogItem.EditorialReviews != null && Model.CatalogItem.EditorialReviews.Length > 0)
        {
            foreach (var review in Model.CatalogItem.EditorialReviews)
            {
                if (review.Source == "Product Description")
                {
            <p>@Html.Raw(review.Content)</p>
                }
            }
        }
    </div>
    <div class="button-container">
        <ul>
            <li class="cart">
                @{Html.RenderPartial("AddToCart", Model, new ViewDataDictionary { { "View", "ListLink" } });}
            </li>
            @{Html.RenderPartial("AddToLinks", Model);}
        </ul>
    </div>
</div>
