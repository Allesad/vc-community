@model CatalogItemSearchModel

<div class="content">
    <div class="category-products">
        <div class="category-image">
            @{Html.RenderAction("ShowDynamicContent", "Banner", new { placeName = "CategoryTop" });}
        </div>
        <div class="toolbar">
            @Html.DisplayFor(model => model.Pager, "SearchPager")
        </div>
        <div class="grid selected">
            <ul class="products-list grid">
                @foreach (var item in Model.CatalogItems)
                {
                    string itemClass = "item";
                    if (item.CatalogItem.Item.Created.HasValue && item.CatalogItem.Item.Created.Value.AddDays(1) >= DateTime.UtcNow)
                    {
                        itemClass = string.Concat(@itemClass, " ", "new");
                    }
                    if (item.Price.Type == PriceType.Sale)
                    {
                        itemClass = string.Concat(@itemClass, " ", "sale");
                    }
                    <li class="@itemClass">
                        <div class="inner">
                            @Html.DisplayFor(model => item, "SearchItem")
                        </div>
                    </li>
                }
            </ul>
        </div>
        <div class="list">
            <ul class="products-list list">
                @foreach (var item in Model.CatalogItems)
                {
                    string itemClass = "item";
                    if (item.CatalogItem.Item.Created.HasValue && item.CatalogItem.Item.Created.Value.AddDays(1) >= DateTime.UtcNow)
                    {
                        itemClass = string.Concat(@itemClass, " ", "new");
                    }
                    if (item.Price.Type == PriceType.Sale)
                    {
                        itemClass = string.Concat(@itemClass, " ", "sale");
                    }
                    <li class="@itemClass">
                        <div class="inner">
                            @Html.DisplayFor(model => item, "SearchListItem")
                        </div>
                    </li>
                }
            </ul>
        </div>
        <div class="toolbar">
            @Html.DisplayFor(model => model.Pager, "SearchPager")
        </div>
    </div>
</div>
<div class="sidebar">
    @if (Model.SelectedFilters != null && Model.SelectedFilters.Count > 0)
    {
        @Html.DisplayFor(m => m, "CurrentFilterPanel")
    }
    @Html.DisplayFor(m => m, "FilterPanel")
</div>
