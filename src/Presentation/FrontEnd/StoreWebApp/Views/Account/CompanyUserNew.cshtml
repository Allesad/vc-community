@model CompanyNewUserModel
@{
	ViewBag.Title = "companyusers";
	Layout = "_Layout.cshtml";
}

<script language="javascript" type="text/javascript">
		var allRoles = "";
		$(document).ready(function () {

			$("#btnAdd").click(function () {
				$("#_AllRoles > option:selected").appendTo("#_UserRoles");
				refreshUserRoles();
			});

			$("#btnAddAll").click(function () {
				$("#_AllRoles > option").appendTo("#_UserRoles");
				refreshUserRoles();
			});

			$("#btnRemove").click(function () {
				$("#_UserRoles > option:selected").appendTo("#_AllRoles");
				refreshUserRoles();
			});

			$("#btnRemoveAll").click(function () {
				$("#_UserRoles > option").appendTo("#_AllRoles");
				refreshUserRoles();
			});

			refreshUserRoles();
		});
		
		function refreshUserRoles() {
			allRoles = "";
			$("#_UserRoles > option").each(function () { allRoles += this.value + ';'; });
			$("#SelectedUserRoles")[0].value = allRoles;
		}

    </script>

@using (Html.BeginForm())
{
	@Html.ValidationSummary(true, "Creating New User was unsuccessful. Please correct the errors and try again.")

	<ul class="form-list">
		<li class="fields">
			<div class="field input-firstname">
				@Html.LabelFor(m => m.FirstName)
				@Html.TextBoxFor(m => m.FirstName, new { @class = "input-text" })
			</div>
			<div class="field input-lastname">
				@Html.LabelFor(m => m.LastName)
				@Html.TextBoxFor(m => m.LastName, new { @class = "input-text" })
			</div>
		</li>
		<li class="fields">
			<div class="field input-email">
				@Html.LabelFor(m => m.EMail)
				@Html.TextBoxFor(m => m.EMail, new { @class = "input-text" })
			</div>
		</li>
		@if (Model.CurrentUser == null)
  {
		<li class="fields">
			<div class="field input-firstname">
				@Html.LabelFor(m => m.Password)
				@Html.PasswordFor(m => m.Password, new { @class = "input-text" })
				@Html.ValidationMessageFor(m => m.Password)
			</div>
			<div class="field input-lastname">
				@Html.LabelFor(m => m.ConfirmPassword)
				@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input-text" })
				@Html.ValidationMessageFor(m => m.ConfirmPassword)
			</div>
		</li>
  }
		<li>
			@if (Model.CurrentUser != null)
   {
				<div class="field input-lastname">
				@Html.LabelFor(m => m.AllRoles)
				@Html.ListBox("_AllRoles", (IEnumerable<SelectListItem>)ViewData["List"], new { @class = "rolesBlock", @id="_AllRoles"})
				</div>

			<div class="buttonholder">
				<button class="button buttonBlock"  id="btnAdd" type="button" value="›"> <span><span>›</span></span> </button>
				<button class="button buttonBlock" id="btnAddAll" type="button" value="»" > <span><span>»</span></span> </button>
				<button class="button buttonBlock" id="btnRemove" type="button" value="‹" > <span><span>‹</span></span> </button>
				<button class="button buttonBlock" id="btnRemoveAll"type="button" value="«" > <span><span>«</span></span> </button>
			</div>

			@Html.Hidden("SelectedUserRoles")

			<div class="field input-firstname">
				@Html.LabelFor(m => m.UserRoles)
				@Html.ListBox("_UserRoles", (IEnumerable<SelectListItem>)ViewData["UserRoles"], new { @class = "rolesBlock", @id="_UserRoles"})
			</div>
   }

		</li>
	</ul>
	<div class="buttons-set">
		<p class="back-link"><a href="@Url.Action("CompanyIndex", "Account")"><small>« </small>Back</a></p>
		<button class="button" title="Create" type="submit"><span>
		@if (Model.CurrentUser != null)
  {
		<span>Save</span>
  }
  else
  {
	  <span>Create</span>
  }
		</span></button>
	</div>
}