<UserControl x:Class="VirtoCommerce.ManagementClient.Catalog.View.CategoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
            xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
            xmlns:Presentation_Core_Infrastructure_Converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters;assembly=VirtoCommerce.ManagementClient.Core"
            xmlns:prism="http://www.codeplex.com/prism"
            xmlns:inf_behavior="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
            xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
            xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
              xmlns:core_behavior="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
             xmlns:securityModule="clr-namespace:VirtoCommerce.Foundation.Security.Model;assembly=VirtoCommerce.Foundation"
             xmlns:implementations="clr-namespace:VirtoCommerce.ManagementClient.Catalog.ViewModel.Catalog.Implementations"
             xmlns:inf="clr-namespace:VirtoCommerce.ManagementClient.Catalog.Infrastructure"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000"
             Style="{DynamicResource Virto_Window_Style}">

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DetailViewTheme/VirtoCommerceDetailTheme.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<inf:PropertyValueConverter x:Key="propertyValueConverter" />
			<Presentation_Core_Infrastructure_Converters:BoolToStringConverter x:Key="boolToYesNoConverter" FalseValue="No" TrueValue="Yes" />
			<Presentation_Core_Infrastructure_Converters:CultureConverter x:Key="cultureConverter" />
		</ResourceDictionary>
	</UserControl.Resources>

	<i:Interaction.Triggers>
		<prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
			<interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
		</prism:InteractionRequestTrigger>
	</i:Interaction.Triggers>

	<TabControl Style="{DynamicResource Virto_TabControlHorizontal_Style}" d:DataContext="{d:DesignInstance implementations:CategoryViewModel}" SelectedIndex="{Binding SelectedTabIndex}">
		<TabItem x:Name="tabItemSummary" Header="Summary" core_behavior:PermissionBehavior.PermissionId="{x:Static securityModule:PredefinedPermissions.CatalogCategoriesManage}" core_behavior:PermissionBehavior.DenyVisibility="Visible">
			<Grid HorizontalAlignment="Left" Width="600">
				<Grid.RowDefinitions>
					<RowDefinition Height="auto" />
					<RowDefinition Height="auto" />
					<RowDefinition Height="auto" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition Width="40" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>

				<StackPanel>
					<TextBlock Text="* Category name:" />
					<core_controls:WatermarkedTextBox Text="{Binding InnerItem.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
				</StackPanel>

				<StackPanel Grid.Row="1">
					<TextBlock Text="* Category code:" />
					<core_controls:WatermarkedTextBox Text="{Binding InnerItem.Code, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
				</StackPanel>

				<StackPanel Grid.Row="2">
					<TextBlock Text="* Category type:" />
					<ComboBox ItemsSource="{Binding AvailableCategoryTypes}" SelectedItem="{Binding InnerItem.PropertySet}" SelectedValue="{Binding InnerItem.PropertySetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" SelectedValuePath="PropertySetId" VerticalContentAlignment="Center"
                                DisplayMemberPath="Name" >
						<!--inf_behavior:WatermarkComboBoxBehavior.EnableWatermark="True" inf_behavior:WatermarkComboBoxBehavior.Label="Pick type"-->
					</ComboBox>
				</StackPanel>

				<StackPanel Grid.Column="2">
					<TextBlock Text="* Enable date:" />
					<DatePicker SelectedDate="{Binding InnerItem.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
				</StackPanel>
				<StackPanel Grid.Row="1" Grid.Column="2">
					<TextBlock Text="Disable date:"/>
					<DatePicker SelectedDate="{Binding InnerItem.EndDate, Mode=TwoWay}"/>
				</StackPanel>

				<CheckBox Grid.Row="3" Grid.Column="0" Margin="0,24,0,0" Content="Store visible" IsChecked="{Binding InnerItem.IsActive, Mode=TwoWay}" />
			</Grid>
		</TabItem>

		<!--PROPERTIES-->
		<TabItem x:Name="tabProperties" Header="Properties">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="auto" />
					<RowDefinition />
				</Grid.RowDefinitions>

				<ItemsControl Grid.Row="0" Style="{StaticResource Virto_ToolbarItemsControl_Style}" HorizontalContentAlignment="Stretch">
					<core_controls:MetroButton x:Name="filterButton" Header="{Binding FilterLanguage, Converter={StaticResource cultureConverter}}" Visibility="{Binding IsCatalogLanguageFilteringEnabled, Converter={StaticResource booleanToVisibilityConverter}}" Height="28" Margin="0" VerticalAlignment="Bottom">
						<core_controls:MetroButton.ContextMenu>
							<ContextMenu ItemsSource="{Binding InnerItemCatalogLanguages}">
								<ContextMenu.ItemContainerStyle>
									<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
										<Setter Property="Header" Value="{Binding Converter={StaticResource cultureConverter}}" />
										<Setter Property="Command" Value="{Binding PlacementTarget.DataContext.PropertiesLocalesFilterCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
										<Setter Property="CommandParameter" Value="{Binding }" />
									</Style>
								</ContextMenu.ItemContainerStyle>
							</ContextMenu>
						</core_controls:MetroButton.ContextMenu>
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="Click">
								<ei:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=filterButton}" PropertyName="PlacementTarget" Value="{Binding ElementName=filterButton, Mode=OneWay}"/>
								<ei:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=filterButton}" PropertyName="IsOpen" Value="True"/>
							</i:EventTrigger>
						</i:Interaction.Triggers>
						<core_controls:VectorImage ImageResource="{StaticResource Icon_Button_Filter}" Width="13" Height="12" Margin="1,2,0,0" />
					</core_controls:MetroButton>

					<StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
						<core_controls:MetroButton Command="{Binding PropertyValueEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=PropertiesList}" Header="EDIT" ToolTip="Edit property">
							<Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png" Width="14"/>
						</core_controls:MetroButton>
						<core_controls:MetroButton Command="{Binding PropertyValueDeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=PropertiesList}" Header="REMOVE" ToolTip="Delete property">
							<Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png" Width="14"/>
						</core_controls:MetroButton>
					</StackPanel>
				</ItemsControl>

				<DataGrid Grid.Row="1" x:Name="PropertiesList" ItemsSource="{Binding PropertiesAndValues}">
					<DataGrid.Columns>
						<DataGridTextColumn Header="Name" Binding="{Binding PropertyName}" />
						<DataGridTextColumn Header="Type" Binding="{Binding PropertyValueType, Converter={StaticResource propertyValueConverter}, ConverterParameter=PropertyValueType}" />
						<DataGridTextColumn Header="Required" Binding="{Binding Property.IsRequired, Converter={StaticResource boolToYesNoConverter}}" />
						<DataGridTextColumn Header="Multi–Language" Binding="{Binding Property.IsLocaleDependant, Converter={StaticResource boolToYesNoConverter}}" />
						<DataGridTextColumn Header="Value" Width="*">
							<DataGridTextColumn.Binding>
								<MultiBinding Converter="{StaticResource propertyValueConverter}">
									<Binding />
									<Binding Path="Value"/>
								</MultiBinding>
							</DataGridTextColumn.Binding>
						</DataGridTextColumn>
					</DataGrid.Columns>

					<DataGrid.RowStyle>
						<Style TargetType="DataGridRow"  BasedOn="{StaticResource {x:Type DataGridRow}}">
							<Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.PropertyValueEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
							<Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsValid}" Value="false">
									<Setter Property="BorderBrush" Value="{StaticResource Virto_TextBox_ErrorTemplate_Border_BorderBrush}" />
									<Setter Property="BorderThickness" Value="1" />
									<Setter Property="ToolTip" Value="Value is required" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</DataGrid.RowStyle>

					<i:Interaction.Triggers>
						<i:EventTrigger EventName="SelectionChanged">
							<ei:CallMethodAction TargetObject="{Binding }" MethodName="RaiseCanExecuteChanged"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</DataGrid>
			</Grid>
		</TabItem>
	</TabControl>
</UserControl>
