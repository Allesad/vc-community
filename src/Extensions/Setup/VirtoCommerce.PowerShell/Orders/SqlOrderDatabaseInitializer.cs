using System.Collections.Generic;
using System.Linq;
using VirtoCommerce.Foundation.Data.Orders;
using VirtoCommerce.Foundation.Data.Orders.Migrations;
using VirtoCommerce.Foundation.Orders.Model;
using VirtoCommerce.Foundation.Orders.Model.Countries;
using VirtoCommerce.Foundation.Orders.Model.Gateways;
using VirtoCommerce.Foundation.Orders.Model.PaymentMethod;
using VirtoCommerce.Foundation.Orders.Model.ShippingMethod;
using VirtoCommerce.PowerShell.DatabaseSetup;


namespace VirtoCommerce.PowerShell.Orders
{
	public class SqlOrderDatabaseInitializer : SetupDatabaseInitializer<EFOrderRepository, Configuration>
	{
		protected override void Seed(EFOrderRepository context)
		{
			CreateCountries(context);
			base.Seed(context);
		}

		#region Country/Regions
		private void CreateCountries(EFOrderRepository repository)
		{
			var countries = new List<Country>
				{
					CreateCountry("Aruba", "ABW", 0),
					CreateCountry("Afghanistan", "AFG", 0),
					CreateCountry("Angola", "AGO", 0),
					CreateCountry("Anguilla", "AIA", 0),
					CreateCountry("Albania", "ALB", 0),
					CreateCountry("Andorra", "AND", 0),
					CreateCountry("Netherlands Antilles", "ANT", 0),
					CreateCountry("United Arab Emirates", "ARE", 0),
					CreateCountry("Argentina", "ARG", 0),
					CreateCountry("Armenia", "ARM", 0),
					CreateCountry("American Samoa", "ASM", 0),
					CreateCountry("Antarctica", "ATA", 0),
					CreateCountry("French Southern Territories", "ATF", 0),
					CreateCountry("Antigua and Barbuda", "ATG", 0),
					CreateCountry("Australia", "AUS", 0),
					CreateCountry("Austria", "AUT", 0),
					CreateCountry("Azerbaijan", "AZE", 0),
					CreateCountry("Burundi", "BDI", 0),
					CreateCountry("Belgium", "BEL", 0),
					CreateCountry("Benin", "BEN", 0),
					CreateCountry("Burkina Faso", "BFA", 0),
					CreateCountry("Bangladesh", "BGD", 0),
					CreateCountry("Bulgaria", "BGR", 0),
					CreateCountry("Bahrain", "BHR", 0),
					CreateCountry("Bahamas", "BHS", 0),
					CreateCountry("Bosnia and Herzegovina", "BIH", 0),
					CreateCountry("Belarus", "BLR", 0),
					CreateCountry("Belize", "BLZ", 0),
					CreateCountry("Bermuda", "BMU", 0),
					CreateCountry("Bolivia", "BOL", 0),
					CreateCountry("Brazil", "BRA", 0),
					CreateCountry("Barbados", "BRB", 0),
					CreateCountry("Brunei Darussalam", "BRN", 0),
					CreateCountry("Bhutan", "BTN", 0),
					CreateCountry("Bouvet Island", "BVT", 0),
					CreateCountry("Botswana", "BWA", 0),
					CreateCountry("Central African Republic", "CAF", 0),
					CreateCountry("Canada", "CAN", 0),
					CreateCountry("Cocos (Keeling) Islands", "CCK", 0),
					CreateCountry("Switzerland", "CHE", 0),
					CreateCountry("Chile", "CHL", 0),
					CreateCountry("China", "CHN", 0),
					CreateCountry("Cote D'Ivoire", "CIV", 0),
					CreateCountry("Cameroon", "CMR", 0),
					CreateCountry("Congo, the Democratic Republic of the", "COD", 0),
					CreateCountry("Congo", "COG", 0),
					CreateCountry("Cook Islands", "COK", 0),
					CreateCountry("Colombia", "COL", 0),
					CreateCountry("Comoros", "COM", 0),
					CreateCountry("Cape Verde", "CPV", 0),
					CreateCountry("Costa Rica", "CRI", 0),
					CreateCountry("Cuba", "CUB", 0),
					CreateCountry("Christmas Island", "CXR", 0),
					CreateCountry("Cayman Islands", "CYM", 0),
					CreateCountry("Cyprus", "CYP", 0),
					CreateCountry("Czech Republic", "CZE", 0),
					CreateCountry("Germany", "DEU", 0),
					CreateCountry("Djibouti", "DJI", 0),
					CreateCountry("Dominica", "DMA", 0),
					CreateCountry("Denmark", "DNK", 0),
					CreateCountry("Dominican Republic", "DOM", 0),
					CreateCountry("Algeria", "DZA", 0),
					CreateCountry("Ecuador", "ECU", 0),
					CreateCountry("Egypt", "EGY", 0),
					CreateCountry("Eritrea", "ERI", 0),
					CreateCountry("Western Sahara", "ESH", 0),
					CreateCountry("Spain", "ESP", 0),
					CreateCountry("Estonia", "EST", 0),
					CreateCountry("Ethiopia", "ETH", 0),
					CreateCountry("Finland", "FIN", 0),
					CreateCountry("Fiji", "FJI", 0),
					CreateCountry("Falkland Islands (Malvinas)", "FLK", 0),
					CreateCountry("France", "FRA", 0),
					CreateCountry("Faroe Islands", "FRO", 0),
					CreateCountry("Micronesia, Federated States of", "FSM", 0),
					CreateCountry("Gabon", "GAB", 0),
					CreateCountry("United Kingdom", "GBR", 0),
					CreateCountry("Georgia", "GEO", 0),
					CreateCountry("Ghana", "GHA", 0),
					CreateCountry("Gibraltar", "GIB", 0),
					CreateCountry("Guinea", "GIN", 0),
					CreateCountry("Guadeloupe", "GLP", 0),
					CreateCountry("Gambia", "GMB", 0),
					CreateCountry("Guinea-Bissau", "GNB", 0),
					CreateCountry("Equatorial Guinea", "GNQ", 0),
					CreateCountry("Greece", "GRC", 0),
					CreateCountry("Grenada", "GRD", 0),
					CreateCountry("Greenland", "GRL", 0),
					CreateCountry("Guatemala", "GTM", 0),
					CreateCountry("French Guiana", "GUF", 0),
					CreateCountry("Guam", "GUM", 0),
					CreateCountry("Guyana", "GUY", 0),
					CreateCountry("Hong Kong", "HKG", 0),
					CreateCountry("Heard Island and Mcdonald Islands", "HMD", 0),
					CreateCountry("Honduras", "HND", 0),
					CreateCountry("Croatia", "HRV", 0),
					CreateCountry("Haiti", "HTI", 0),
					CreateCountry("Hungary", "HUN", 0),
					CreateCountry("Indonesia", "IDN", 0),
					CreateCountry("India", "IND", 0),
					CreateCountry("British Indian Ocean Territory", "IOT", 0),
					CreateCountry("Ireland", "IRL", 0),
					CreateCountry("Iran, Islamic Republic of", "IRN", 0),
					CreateCountry("Iraq", "IRQ", 0),
					CreateCountry("Iceland", "ISL", 0),
					CreateCountry("Israel", "ISR", 0),
					CreateCountry("Italy", "ITA", 0),
					CreateCountry("Jamaica", "JAM", 0),
					CreateCountry("Jordan", "JOR", 0),
					CreateCountry("Japan", "JPN", 0),
					CreateCountry("Kazakhstan", "KAZ", 0),
					CreateCountry("Kenya", "KEN", 0),
					CreateCountry("Kyrgyzstan", "KGZ", 0),
					CreateCountry("Cambodia", "KHM", 0),
					CreateCountry("Kiribati", "KIR", 0),
					CreateCountry("Saint Kitts and Nevis", "KNA", 0),
					CreateCountry("Korea, Republic of", "KOR", 0),
					CreateCountry("Kuwait", "KWT", 0),
					CreateCountry("Lao People's Democratic Republic", "LAO", 0),
					CreateCountry("Lebanon", "LBN", 0),
					CreateCountry("Liberia", "LBR", 0),
					CreateCountry("Libyan Arab Jamahiriya", "LBY", 0),
					CreateCountry("Saint Lucia", "LCA", 0),
					CreateCountry("Liechtenstein", "LIE", 0),
					CreateCountry("Sri Lanka", "LKA", 0),
					CreateCountry("Lesotho", "LSO", 0),
					CreateCountry("Lithuania", "LTU", 0),
					CreateCountry("Luxembourg", "LUX", 0),
					CreateCountry("Latvia", "LVA", 0),
					CreateCountry("Macao", "MAC", 0),
					CreateCountry("Morocco", "MAR", 0),
					CreateCountry("Monaco", "MCO", 0),
					CreateCountry("Moldova, Republic of", "MDA", 0),
					CreateCountry("Madagascar", "MDG", 0),
					CreateCountry("Maldives", "MDV", 0),
					CreateCountry("Mexico", "MEX", 0),
					CreateCountry("Marshall Islands", "MHL", 0),
					CreateCountry("Macedonia, the Former Yugoslav Republic of", "MKD", 0),
					CreateCountry("Mali", "MLI", 0),
					CreateCountry("Malta", "MLT", 0),
					CreateCountry("Myanmar", "MMR", 0),
					CreateCountry("Mongolia", "MNG", 0),
					CreateCountry("Northern Mariana Islands", "MNP", 0),
					CreateCountry("Mozambique", "MOZ", 0),
					CreateCountry("Mauritania", "MRT", 0),
					CreateCountry("Montserrat", "MSR", 0),
					CreateCountry("Martinique", "MTQ", 0),
					CreateCountry("Mauritius", "MUS", 0),
					CreateCountry("Malawi", "MWI", 0),
					CreateCountry("Malaysia", "MYS", 0),
					CreateCountry("Mayotte", "MYT", 0),
					CreateCountry("Namibia", "NAM", 0),
					CreateCountry("New Caledonia", "NCL", 0),
					CreateCountry("Niger", "NER", 0),
					CreateCountry("Norfolk Island", "NFK", 0),
					CreateCountry("Nigeria", "NGA", 0),
					CreateCountry("Nicaragua", "NIC", 0),
					CreateCountry("Niue", "NIU", 0),
					CreateCountry("Netherlands", "NLD", 0),
					CreateCountry("Norway", "NOR", 0),
					CreateCountry("Nepal", "NPL", 0),
					CreateCountry("Nauru", "NRU", 0),
					CreateCountry("New Zealand", "NZL", 0),
					CreateCountry("Oman", "OMN", 0),
					CreateCountry("Pakistan", "PAK", 0),
					CreateCountry("Panama", "PAN", 0),
					CreateCountry("Pitcairn", "PCN", 0),
					CreateCountry("Peru", "PER", 0),
					CreateCountry("Philippines", "PHL", 0),
					CreateCountry("Palau", "PLW", 0),
					CreateCountry("Papua New Guinea", "PNG", 0),
					CreateCountry("Poland", "POL", 0),
					CreateCountry("Puerto Rico", "PRI", 0),
					CreateCountry("Korea, Democratic People's Republic of", "PRK", 0),
					CreateCountry("Portugal", "PRT", 0),
					CreateCountry("Paraguay", "PRY", 0),
					CreateCountry("Palestinian Territory, Occupied", "PSE", 0),
					CreateCountry("French Polynesia", "PYF", 0),
					CreateCountry("Qatar", "QAT", 0),
					CreateCountry("Reunion", "REU", 0),
					CreateCountry("Romania", "ROM", 0),
					CreateCountry("Russian Federation", "RUS", 0),
					CreateCountry("Rwanda", "RWA", 0),
					CreateCountry("Saudi Arabia", "SAU", 0),
					CreateCountry("Serbia and Montenegro", "SCG", 0),
					CreateCountry("Sudan", "SDN", 0),
					CreateCountry("Senegal", "SEN", 0),
					CreateCountry("Singapore", "SGP", 0),
					CreateCountry("South Georgia and the South Sandwich Islands", "SGS", 0),
					CreateCountry("Saint Helena", "SHN", 0),
					CreateCountry("Svalbard and Jan Mayen", "SJM", 0),
					CreateCountry("Solomon Islands", "SLB", 0),
					CreateCountry("Sierra Leone", "SLE", 0),
					CreateCountry("El Salvador", "SLV", 0),
					CreateCountry("San Marino", "SMR", 0),
					CreateCountry("Somalia", "SOM", 0),
					CreateCountry("Saint Pierre and Miquelon", "SPM", 0),
					CreateCountry("Sao Tome and Principe", "STP", 0),
					CreateCountry("Suriname", "SUR", 0),
					CreateCountry("Slovakia", "SVK", 0),
					CreateCountry("Slovenia", "SVN", 0),
					CreateCountry("Sweden", "SWE", 0),
					CreateCountry("Swaziland", "SWZ", 0),
					CreateCountry("Seychelles", "SYC", 0),
					CreateCountry("Syrian Arab Republic", "SYR", 0),
					CreateCountry("Turks and Caicos Islands", "TCA", 0),
					CreateCountry("Chad", "TCD", 0),
					CreateCountry("Togo", "TGO", 0),
					CreateCountry("Thailand", "THA", 0),
					CreateCountry("Tajikistan", "TJK", 0),
					CreateCountry("Tokelau", "TKL", 0),
					CreateCountry("Turkmenistan", "TKM", 0),
					CreateCountry("Timor-Leste", "TLS", 0),
					CreateCountry("Tonga", "TON", 0),
					CreateCountry("Trinidad and Tobago", "TTO", 0),
					CreateCountry("Tunisia", "TUN", 0),
					CreateCountry("Turkey", "TUR", 0),
					CreateCountry("Tuvalu", "TUV", 0),
					CreateCountry("Taiwan, Province of China", "TWN", 0),
					CreateCountry("Tanzania, United Republic of", "TZA", 0),
					CreateCountry("Uganda", "UGA", 0),
					CreateCountry("Ukraine", "UKR", 0),
					CreateCountry("United States Minor Outlying Islands", "UMI", 0),
					CreateCountry("Uruguay", "URY", 0),
					CreateCountry("United States", "USA", 100),
					CreateCountry("Uzbekistan", "UZB", 0),
					CreateCountry("Holy See (Vatican City State)", "VAT", 0),
					CreateCountry("Saint Vincent and the Grenadines", "VCT", 0),
					CreateCountry("Venezuela", "VEN", 0),
					CreateCountry("Virgin Islands, British", "VGB", 0),
					CreateCountry("Virgin Islands, U.s.", "VIR", 0),
					CreateCountry("Viet Nam", "VNM", 0),
					CreateCountry("Vanuatu", "VUT", 0),
					CreateCountry("Wallis and Futuna", "WLF", 0),
					CreateCountry("Samoa", "WSM", 0),
					CreateCountry("Yemen", "YEM", 0),
					CreateCountry("South Africa", "ZAF", 0),
					CreateCountry("Zambia", "ZMB", 0),
					CreateCountry("Zimbabwe", "ZWE", 0)
				};
			foreach (var country in countries)
			{
				repository.Add(country);
			}
			repository.UnitOfWork.Commit();
		}

		private Region CreateRegion(string name, string id, int priority, string countryId)
		{
			var region = new Region
			{
				RegionId = id,
				CountryId = countryId,
				DisplayName = name,
				Name = name,
				Priority = priority,
				IsVisible = true
			};

			return region;
		}

		private IEnumerable<Region> CreateRegions()
		{
			var list = new List<Region>
				{
					CreateRegion("ALABAMA", "AL", 0, "USA"),
					CreateRegion("ALASKA", "AK", 0, "USA"),
					CreateRegion("AMERICAN SAMOA", "AS", 0, "USA"),
					CreateRegion("ARIZONA", "AZ", 0, "USA"),
					CreateRegion("ARKANSAS", "AR", 0, "USA"),
					CreateRegion("CALIFORNIA", "CA", 0, "USA"),
					CreateRegion("COLORADO", "CO", 0, "USA"),
					CreateRegion("CONNECTICUT", "CT", 0, "USA"),
					CreateRegion("DELAWARE", "DE", 0, "USA"),
					CreateRegion("DISTRICT OF COLUMBIA", "DC", 0, "USA"),
					CreateRegion("FEDERATED STATES OF MICRONESIA", "FM", 0, "USA"),
					CreateRegion("FLORIDA", "FL", 0, "USA"),
					CreateRegion("GEORGIA", "GA", 0, "USA"),
					CreateRegion("GUAM", "GU", 0, "USA"),
					CreateRegion("HAWAII", "HI", 0, "USA"),
					CreateRegion("IDAHO", "ID", 0, "USA"),
					CreateRegion("ILLINOIS", "IL", 0, "USA"),
					CreateRegion("INDIANA", "IN", 0, "USA"),
					CreateRegion("IOWA", "IA", 0, "USA"),
					CreateRegion("KANSAS", "KS", 0, "USA"),
					CreateRegion("KENTUCKY", "KY", 0, "USA"),
					CreateRegion("LOUISIANA", "LA", 0, "USA"),
					CreateRegion("MAINE", "ME", 0, "USA"),
					CreateRegion("MARSHALL ISLANDS", "MH", 0, "USA"),
					CreateRegion("MARYLAND", "MD", 0, "USA"),
					CreateRegion("MASSACHUSETTS", "MA", 0, "USA"),
					CreateRegion("MICHIGAN", "MI", 0, "USA"),
					CreateRegion("MINNESOTA", "MN", 0, "USA"),
					CreateRegion("MISSISSIPPI", "MS", 0, "USA"),
					CreateRegion("MISSOURI", "MO", 0, "USA"),
					CreateRegion("MONTANA", "MT", 0, "USA"),
					CreateRegion("NEBRASKA", "NE", 0, "USA"),
					CreateRegion("NEVADA", "NV", 0, "USA"),
					CreateRegion("NEW HAMPSHIRE", "NH", 0, "USA"),
					CreateRegion("NEW JERSEY", "NJ", 0, "USA"),
					CreateRegion("NEW MEXICO", "NM", 0, "USA"),
					CreateRegion("NEW YORK", "NY", 0, "USA"),
					CreateRegion("NORTH CAROLINA", "NC", 0, "USA"),
					CreateRegion("NORTH DAKOTA", "ND", 0, "USA"),
					CreateRegion("NORTHERN MARIANA ISLANDS", "MP", 0, "USA"),
					CreateRegion("OHIO", "OH", 0, "USA"),
					CreateRegion("OKLAHOMA", "OK", 0, "USA"),
					CreateRegion("OREGON", "OR", 0, "USA"),
					CreateRegion("PALAU", "PW", 0, "USA"),
					CreateRegion("PENNSYLVANIA", "PA", 0, "USA"),
					CreateRegion("PUERTO RICO", "PR", 0, "USA"),
					CreateRegion("RHODE ISLAND", "RI", 0, "USA"),
					CreateRegion("SOUTH CAROLINA", "SC", 0, "USA"),
					CreateRegion("SOUTH DAKOTA", "SD", 0, "USA"),
					CreateRegion("TENNESSEE", "TN", 0, "USA"),
					CreateRegion("TEXAS", "TX", 0, "USA"),
					CreateRegion("UTAH", "UT", 0, "USA"),
					CreateRegion("VERMONT", "VT", 0, "USA"),
					CreateRegion("VIRGIN ISLANDS", "VI", 0, "USA"),
					CreateRegion("VIRGINIA", "VA", 0, "USA"),
					CreateRegion("WASHINGTON", "WA", 0, "USA"),
					CreateRegion("WEST VIRGINIA", "WV", 0, "USA"),
					CreateRegion("WISCONSIN", "WI", 0, "USA"),
					CreateRegion("WYOMING", "WY", 0, "USA"),
					CreateRegion("Armed Forces Africa", "AF", 0, "USA"),
					CreateRegion("Armed Forces Americas (except Canada)", "AA", 0, "USA"),
					CreateRegion("Armed Forces Canada", "AC", 0, "USA"),
					CreateRegion("Armed Forces Europe", "AE", 0, "USA"),
					CreateRegion("Armed Forces Middle East", "AM", 0, "USA"),
					CreateRegion("Armed Forces Pacific", "AP", 0, "USA")
				};
			return list.ToArray();
		}

		private Country CreateCountry(string name, string id, int priority)
		{
			var country = new Country { CountryId = id, DisplayName = name, Name = name, Priority = priority, IsVisible = true };

			if (id == "USA")
			{
				var regions = CreateRegions();
				foreach (var region in regions)
				{
					country.Regions.Add(region);
				}
			}

			return country;
		}
		#endregion
	}
}
